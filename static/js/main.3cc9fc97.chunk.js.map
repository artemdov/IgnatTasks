{"version":3,"sources":["p2-homeworks/h5/pages/header.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperSpan.module.css","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.module.css","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.module.css","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/HW8.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior+.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Greeting","name","setNameCallback","addUser","error","totalUsers","inputClass","s","someClass","value","onChange","className","onClick","GreetingContainer","users","addUserCallback","useState","setName","setError","length","e","currentTarget","alert","HW3","setUsers","newUser","_id","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","HeaderItem","props","item","active","to","id","activeClassName","title","Header","nav","Message","styles","all","any","message","when","time","picture","src","avatar","width","height","messageData","HW1","Affair","deleteAffairCallback","affair","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","superSpan","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","SuperSelect","options","onChangeOption","mappedOptions","index","select","SuperRadio","o","i","radio","arr","HW7","initialPeople","age","HW8","people","setPeople","finalPeople","p","action","homeWorkReducer","payload","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.3cc9fc97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"header_error__11v_0\",\"item\":\"header_item__3yB1Q\",\"active\":\"header_active__DuNw3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__ZfJEt\",\"picture\":\"Message_picture__33pi3\",\"all\":\"Message_all__eQYcQ\",\"title\":\"Message_title__1V-nh\",\"when\":\"Message_when__2gnbW\",\"any\":\"Message_any__189mN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1zx4R\",\"error\":\"Greeting_error__mCZ-n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__13gMJ\",\"errorInput\":\"SuperInputText_errorInput__3MGoL\",\"error\":\"SuperInputText_error__1SWKZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2u1BU\",\"column\":\"HW4_column__2DX37\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1WNMt\",\"red\":\"SuperButton_red__2K78d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2qP4J\",\"spanClassName\":\"SuperCheckbox_spanClassName__pG6tL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3W9JJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperSpan_superSpan__2xH4k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__4m2kG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__1I9jq\"};","import React from \"react\";\nimport s from \"./Greeting.module.css\";\n\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string  // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers}) => {                           // деструктуризация пропсов\n    const inputClass = name === \"\" ? s.error : s.someClass; // need to fix with (?:)\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser}>add</button>\n            <span>{totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport  {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string>(\"\"); // need to fix any\n\n    const setNameCallback = (e:React.ChangeEvent<HTMLInputElement>) => {        // need to fix any\n        setError('')\n        setName(e.currentTarget.value);\n    };\n    const addUser = () => {\n        addUserCallback(name)\n        alert(`Hello ${name} !`);\n\n\n    };\n\n    const totalUsers = users.length; // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => {\n        let newUser: UserType = {_id: v1(), name: name}\n        setUsers([newUser, ...users]); // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = ` ${error ? s.errorInput : className}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {                    // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                     className={s.blue} //проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport s from './pages/header.module.css';\nimport {NavLink} from \"react-router-dom\";\nconst HeaderItem = (props: {title: string; id: string}) => {\n    return(\n        <div className={`${s.item} ${s.active}`}>\n            <NavLink to={props.id} activeClassName={s.active}>{props.title}</NavLink>\n        </div>\n    )\n}\nfunction Header() {\n    return (\n        <div>\n            <nav className={s.nav}>\n                <HeaderItem title='' id='/'/>\n                <HeaderItem title='PRE_JUNIOR' id='pre-junior'/>\n                <HeaderItem title='JUNIOR' id='/junior'/>\n                <HeaderItem title='JUNIOR_PLUS' id='/junior-plus'/>\n\n\n            </nav>\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport styles from './Message.module.css';\n\n\ntype MessageData = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessageData) {\n    return (\n        <div className={styles.all}>\n\n            <div className={styles.any}>\n                <div className={styles.title}>\n                    {props.name}\n                </div>\n                <div className={styles.message}>\n                    {props.message}\n                </div>\n                <div className={styles.when}>\n                    {props.time}\n                </div>\n            </div>\n            <div className={styles.picture}>\n                < img src={props.avatar} width={100} height={100}/>\n            </div>\n\n        </div>\n    );\n}\n\n\nexport default Message;\n\n\n","import React from \"react\";\nimport Message from \"./Message\";\n\nconst messageData = {\n    avatar:'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: \"Artem\",\n    message: \"npm start нажимать?\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks1\n\n            {/*should work (должно работать)*/}\n\n            <Message avatar={messageData.avatar} message={messageData.message} name={messageData.name} time={messageData.time}/>\n\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport {Affairs} from \"./Affairs\"\nexport type AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (AffairID: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};// need to fix\n\n    return (\n        <div>\n            // show some text\n\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\n\nexport  type AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (el: FilterType) => void\n    deleteAffairCallback: (AffairID: number) => void\n\n}\nexport  function Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter('all')}; // need to fix\n    const setHigh = () => {props.setFilter(\"high\")};\n    const setMiddle = () => {props.setFilter('middle')};\n    const setLow = () => {props.setFilter('low')};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType = 'low' | 'high' | 'middle'// need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n}\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n     if (filter === \"all\") return affairs;\n     else return affairs.filter(el => el.priority===filter); // need to fix\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter(el => el._id !== _id); // need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\nimport s from './SuperSpan.module.css'\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n         setEditMode(false); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n         setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${s.superSpan} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n         setValue(restoreState<string>(\"editable-span-value\", value));\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport s from './header.module.css'\n\nfunction Error404() {\n    return (\n        <div className={s.error}>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\nimport s from './SuperSelect.module.css'\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>//typeof HTMLSelectElement\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect:  React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions = options ? options.map((item, index) => <option key = {index}>{item}</option>) : [];\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select className={s.select} onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from './SuperRadio.module.css'\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + \"-\" + i}>\n            <input className={s.radio}\n                type={\"radio\"}\n                name={'radio'}\n                onChange={onChangeOption}\n                value={value}\n                checked={value === o}\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\n\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1]);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","import React, {useState} from \"react\";\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nconst initialPeople = [\n    {_id: 0, name: \"Кот\", age: 3},\n    {_id: 1, name: \"Александр\", age: 66},\n    {_id: 2, name: \"Коля\", age: 16},\n    {_id: 3, name: \"Виктор\", age: 44},\n    {_id: 4, name: \"Дмитрий\", age: 40},\n    {_id: 5, name: \"Ирина\", age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState(initialPeople);\n\n    const finalPeople = people.map(p => (\n        <div key={p._id}>\n            some name, age\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"up\"}))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n\n            {finalPeople}\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n            <div>sort down</div>\n\n            check 18\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW8;\n","export const homeWorkReducer = (state: any, action: any): any => {\n    switch (action.type) {\n        case \"sort\": {\n\n            return state\n        }\n        case \"check\": {\n\n            return state\n        }\n        default: return state\n    }\n};","import React from \"react\";\nimport HW6 from \"../../h6/HW6\";\nimport HW7 from \"../../h7/HW7\";\nimport HW8 from \"../../h8/HW8\";\n\nfunction Junior() {\n    return (\n        <div>\n\n            <HW6/>\n            <HW7/>\n            <HW8/>\n        </div>\n    );\n}\n\nexport default Junior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nfunction JuniorPlus() {\n    return (\n        <div>\n          JUNIOR_PLUS\n        </div>\n    );\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport {Switch} from \"react-router-dom\";\nimport {Route} from \"react-router-dom\";\nimport {Redirect} from \"react-router-dom\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/Junior+\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR:'/junior',\n    JUNIOR_PLUS:'/junior-plus'// add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR}  render={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS}  render={() => <JuniorPlus/>}/>\n\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport { HashRouter } from \"react-router-dom\";\n\n\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\n\n\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}